"use client"

import { createContext, useContext, useState, useEffect, type ReactNode } from "react"

// Define the translations
const translations: Record<string, Record<string, string>> = {
  en: {
    home: "Home",
    about: "About",
    medicineSearch: "Medicine Search",
    pharmacyFinder: "Pharmacy Finder",
    marketplace: "Marketplace",
    searchMedicine: "Search Medicine",
    enterMedicineName: "Enter medicine name",
    search: "Search",
    searchResults: "Search Results",
    noResults: "No results found",
    loading: "Loading...",
    findPharmacy: "Find Pharmacy",
    enterLocation: "Enter your location",
    findNearby: "Find Nearby",
    pharmacyResults: "Pharmacy Results",
    noPharmacies: "No pharmacies found",
    getStarted: "Get Started",
    signIn: "Sign In",
    signUp: "Sign Up",
    signOut: "Sign Out",
    email: "Email",
    password: "Password",
    confirmPassword: "Confirm Password",
    forgotPassword: "Forgot Password?",
    dontHaveAccount: "Don't have an account?",
    alreadyHaveAccount: "Already have an account?",
    signInWithGoogle: "Sign in with Google",
    signInWithEmail: "Sign in with Email",
    ourMission: "Our Mission",
    missionDescription:
      "Our mission is to provide accessible, accurate information about medications and connect users with nearby pharmacies. We aim to improve healthcare accessibility and empower individuals to make informed decisions about their medications.",
    howItWorks: "How It Works",
    ourTechnology: "Our Technology",
    techDescription:
      "We leverage cutting-edge technologies to deliver a seamless experience. Our platform combines AI-powered medicine information retrieval with location-based pharmacy finding capabilities.",
    ourTeam: "Our Team",
    getDetailedInfo: "Learn more about our platform, mission, and the team behind it.",
    hackathonProject: "Hackathon Project",
    hackathonDesc:
      "This project was developed as part of a hackathon focused on AI agents. Our team created an innovative solution to address medication information accessibility challenges.",
    fullStackDev: "Full Stack Developer",
    uiUxDesigner: "UI/UX Designer",
    backendDev: "Backend Developer",
    aiEngineer: "AI Engineer",
    medicineDetails: "Medicine Details",
    uses: "Uses",
    sideEffects: "Side Effects",
    dosage: "Dosage",
    precautions: "Precautions",
    interactions: "Interactions",
    pharmacyName: "Pharmacy Name",
    address: "Address",
    phone: "Phone",
    distance: "Distance",
    hours: "Hours",
    directions: "Directions",
    buyNow: "Buy Now",
    connectWallet: "Connect Wallet",
    price: "Price",
    quantity: "Quantity",
    total: "Total",
    checkout: "Checkout",
    transactionHistory: "Transaction History",
    date: "Date",
    status: "Status",
    viewDetails: "View Details",
    searchHistory: "Search History",
    clearHistory: "Clear History",
    settings: "Settings",
    language: "Language",
    theme: "Theme",
    logout: "Logout",
    english: "English",
    amharic: "አማርኛ",
    lightMode: "Light Mode",
    darkMode: "Dark Mode",
    systemDefault: "System Default",
    findMedicineInfo: "Find Medicine Information",
    instantly: "Instantly",
    getDetailedInfo:
      "Get detailed information about medications and find nearby pharmacies with our AI-powered platform.",
    howIDAHelps: "How IDA Helps You",
    aiPoweredPlatform:
      "Our AI-powered platform provides accurate medicine information and helps you locate nearby pharmacies.",
    medicineInformation: "Medicine Information",
    getDetailedDescriptions: "Get detailed descriptions, uses, side effects, and precautions for any medication.",
    pharmacyLocator: "Pharmacy Locator",
    findNearbyPharmacies: "Find nearby pharmacies that have the medications you need.",
    readyToFind: "Ready to Find Your Medicine?",
    startSearching: "Start searching for medicine information or find a nearby pharmacy.",
    category: "Category",
    information: "Information",
    medicalHistory: "Medical History",
    inhibitorTesting: "Inhibitor Testing",
    welcomeBack: "Welcome Back",
    createAccount: "Create Account",
    loginToAccess: "Login to access medicine information and pharmacy locations",
    orContinueWith: "Or continue with",
    useMyLocation: "Use My Location",
    enterYourLocation: "Enter your location",
    findPharmacies: "Find Pharmacies",
    viewOnMap: "View on Map",
    getDirections: "Get Directions",
    visitWebsite: "Visit Website",
    noMedicinesFound: "No Medicines Found",
    trySearchingAgain: "Try searching with a different term",
    searchForMedicine: "Search for a medicine to get detailed information",
    noMedicineInfo: "No Medicine Information",
    blockchainMarketplace: "Medicine Marketplace",
    marketplaceDescription: "Buy medicines securely using blockchain technology and earn rewards",
    aiAssistantTitle: "AI Medicine Assistant",
    aiAssistantMessages: [
      "Ask me about any medicine",
      "Find information about side effects",
      "Discover alternative medications",
      "Learn about drug interactions",
      "Find nearby pharmacies",
    ],
    findPharmaciesFor: "Find pharmacies that have",
    milesAway: "miles away",
    enterLocationToFind: "Enter your location or use your current location to find pharmacies near you",
    gotIt: "Got it",
    walletConnected: "Wallet Connected",
    welcomeGift: "Welcome Gift",
    welcomeGiftDescription: "New users receive 100 IDA Tokens to get started with our marketplace!",
    blockchainVerifiedVendor: "Blockchain Verified Vendor",
    expressDelivery: "Express Delivery (1-2 hours)",
    standardDelivery: "Standard Delivery (3-5 hours)",
    firstOrderDiscount: "10% off your first order",
    freeDelivery: "Free delivery on orders over 500 ETB",
    ethiopianPharmaceuticalAssociation: "Ethiopian Pharmaceutical Association",
    pharmacyStatistics: "Pharmacy Statistics",
    rating: "Rating",
    deliverySuccess: "Delivery Success",
    availableMedicines: "Available Medicines",
    scheduleConsultation: "Schedule Consultation",
    browseMedicines: "Browse Medicines",
    viewTransactionHistory: "View your transaction history",
    noTransactions: "No Transactions",
    comingSoon: "Coming Soon",
    medicineScan: "Medicine Scanner",
    scanMedicineDescription: "Scan medicine packages to instantly get detailed information about any medication",
    qrCodeInfo: "QR Code Storage",
    qrCodeDescription: "Store and share your medication information securely using QR codes",
    firstAidGame: "First Aid Game",
    profile: "Profile",
    transactions: "Transactions",
  },
  am: {
    home: "ቤት",
    about: "ስለ እኛ",
    medicineSearch: "የመድሃኒት ፍለጋ",
    pharmacyFinder: "የፋርማሲ መፈለጊያ",
    marketplace: "የመድሃኒት ገበያ",
    searchMedicine: "መድሃኒት ፈልግ",
    enterMedicineName: "የመድሃኒት ስም ያስገቡ",
    search: "ፈልግ",
    searchResults: "የፍለጋ ውጤቶች",
    noResults: "ምንም ውጤት አልተገኘም",
    loading: "በመጫን ላይ...",
    findPharmacy: "ፋርማሲ ፈልግ",
    enterLocation: "አካባቢዎን ያስገቡ",
    findNearby: "በአቅራቢያ ይፈልጉ",
    pharmacyResults: "የፋርማሲ ውጤቶች",
    noPharmacies: "ምንም ፋርማሲ አልተገኘም",
    getStarted: "ይጀምሩ",
    signIn: "ይግቡ",
    signUp: "ይመዝገቡ",
    signOut: "ውጣ",
    email: "ኢሜይል",
    password: "የይለፍ ቃል",
    confirmPassword: "የይለፍ ቃል ያረጋግጡ",
    forgotPassword: "የይለፍ ቃል ረሳሁ?",
    dontHaveAccount: "መለያ የለዎትም?",
    alreadyHaveAccount: "መለያ አለዎት?",
    signInWithGoogle: "በGoogle ይግቡ",
    signInWithEmail: "በኢሜይል ይግቡ",
    ourMission: "ተልዕኮአችን",
    missionDescription:
      "ተልዕኮአችን ስለ መድሃኒቶች ትክክለኛ መረጃ መስጠትና ተጠቃሚዎችን ከአቅራቢያ ፋርማሲዎች ጋር ማገናኘት ነው። የጤና እንክብካቤ ተደራሽነትን ለማሻሻል እና ግለሰቦች ስለ መድሃኒቶቻቸው ትክክለኛ ውሳኔ እንዲወስኑ ለማስቻል እንሰራለን።",
    howItWorks: "እንዴት እንደሚሰራ",
    ourTechnology: "ቴክኖሎጂያችን",
    techDescription:
      "ቀልጣፋ ተሞክሮ ለመስጠት ዘመናዊ ቴክኖሎጂዎችን እንጠቀማለን። መድረካችን በሰው ሰራሽ ብልህነት የሚሰራ የመድሃኒት መረጃ ማግኛ ከአካባቢ ላይ የተመሰረተ የፋርማሲ ማግኛ ችሎታዎች ጋር ያጣምራል።",
    ourTeam: "ቡድናችን",
    getDetailedInfo: "ስለ መድረካችን፣ ተልዕኮአችን እና ከኋላው ስላለው ቡድን የበለጠ ይወቁ።",
    hackathonProject: "የሃካቶን ፕሮጀክት",
    hackathonDesc:
      "ይህ ፕሮጀክት በሰው ሰራሽ ብልህነት ወኪሎች ላይ ያተኮረ ሃካቶን አካል ሆኖ ተዘጋጅቷል። ቡድናችን የመድሃኒት መረጃ ተደራሽነት ችግሮችን ለመፍታት አዲስ መፍትሄ ፈጥሯል።",
    fullStackDev: "ሙሉ ስታክ ገንቢ",
    uiUxDesigner: "የተጠቃሚ ገጽታ ንድፈ ሰሪ",
    backendDev: "የኋላ-ጫፍ ገንቢ",
    aiEngineer: "የሰው ሰራሽ ብልህነት መሀንዲስ",
    medicineDetails: "የመድሃኒት ዝርዝሮች",
    uses: "አጠቃቀሞች",
    sideEffects: "የጎንዮሽ ጉዳቶች",
    dosage: "መጠን",
    precautions: "ጥንቃቄዎች",
    interactions: "ግንኙነቶች",
    pharmacyName: "የፋርማሲ ስም",
    address: "አድራሻ",
    phone: "ስልክ",
    distance: "ርቀት",
    hours: "ሰዓታት",
    directions: "አቅጣጫዎች",
    buyNow: "አሁን ይግዙ",
    connectWallet: "ዋሌትዎን ያገናኙ",
    price: "ዋጋ",
    quantity: "ብዛት",
    total: "ጠቅላላ",
    checkout: "ይክፈሉ",
    transactionHistory: "የግብይት ታሪክ",
    date: "ቀን",
    status: "ሁኔታ",
    viewDetails: "ዝርዝሮችን ይመልከቱ",
    searchHistory: "የፍለጋ ታሪክ",
    clearHistory: "ታሪክን አጽዳ",
    settings: "ቅንብሮች",
    language: "ቋንቋ",
    theme: "ገጽታ",
    logout: "ውጣ",
    english: "እንግሊዝኛ",
    amharic: "አማርኛ",
    lightMode: "ብሩህ ሁነታ",
    darkMode: "ጨለማ ሁነታ",
    systemDefault: "የስርዓት ነባሪ",
    findMedicineInfo: "የመድሃኒት መረጃ ያግኙ",
    instantly: "በፍጥነት",
    getDetailedInfo: "ስለ መድሃኒቶች ዝርዝር መረጃ ያግኙ እና በአቅራቢያዎ ያሉ ፋርማሲዎችን በሰው ሰራሽ ብልህነት የሚሰራ መድረካችን ይፈልጉ።",
    howIDAHelps: "IDA እንዴት እንደሚረዳዎ",
    aiPoweredPlatform: "በሰው ሰራሽ ብልህነት የሚሰራ መድረካችን ትክክለኛ የመድሃኒት መረጃ ይሰጣል እና በአቅራቢያዎ ያሉ ፋርማሲዎችን እንዲያገኙ ይረዳዎታል።",
    medicineInformation: "የመድሃኒት መረጃ",
    getDetailedDescriptions: "ለማንኛውም መድሃኒት ዝርዝር መግለጫዎችን፣ አጠቃቀሞችን፣ የጎንዮሽ ጉዳቶችን እና ጥንቃቄዎችን ያግኙ።",
    pharmacyLocator: "የፋርማሲ አግኚ",
    findNearbyPharmacies: "የሚፈልጓቸውን መድሃኒቶች የሚያቀርቡ በአቅራቢያዎ ያሉ ፋርማሲዎችን ይፈልጉ።",
    readyToFind: "መድሃኒትዎን ለመፈለግ ዝግጁ ነዎት?",
    startSearching: "የመድሃኒት መረጃ መፈለግ ይጀምሩ ወይም በአቅራቢያዎ ያለ ፋርማሲ ይፈልጉ።",
    category: "ምድብ",
    information: "መረጃ",
    medicalHistory: "የህክምና ታሪክ",
    inhibitorTesting: "የመከላከያ ምርመራ",
    welcomeBack: "እንኳን ደህና መጡ",
    createAccount: "መለያ ይፍጠሩ",
    loginToAccess: "የመድሃኒት መረጃ እና የፋርማሲ ቦታዎችን ለማግኘት ይግቡ",
    orContinueWith: "ወይም ይቀጥሉ በ",
    useMyLocation: "አሁን ያለሁበትን ቦታ ተጠቀም",
    enterYourLocation: "አካባቢዎን ያስገቡ",
    findPharmacies: "ፋርማሲዎችን ፈልግ",
    viewOnMap: "በካርታ ላይ ይመልከቱ",
    getDirections: "አቅጣጫዎችን ያግኙ",
    visitWebsite: "ድረ-ገጹን ይጎብኙ",
    noMedicinesFound: "ምንም መድሃኒቶች አልተገኙም",
    trySearchingAgain: "በተለየ ቃል ፍለጋ ይሞክሩ",
    searchForMedicine: "ዝርዝር መረጃ ለማግኘት መድሃኒት ይፈልጉ",
    noMedicineInfo: "ምንም የመድሃኒት መረጃ የለም",
    blockchainMarketplace: "የመድሃኒት ገበያ",
    marketplaceDescription: "መድሃኒቶችን በብሎክቼይን ቴክኖሎጂ በተጠበቀ ሁኔታ ይግዙ እና ሽልማቶችን ያግኙ",
    aiAssistantTitle: "የሰው ሰራሽ ብልህነት የመድሃኒት ረዳት",
    aiAssistantMessages: [
      "ስለ ማንኛውም መድሃኒት ይጠይቁኝ",
      "ስለ ጎንዮሽ ጉዳቶች መረጃ ያግኙ",
      "አማራጭ መድሃኒቶችን ይፈልጉ",
      "ስለ መድሃኒት መስተጋብሮች ይወቁ",
      "በአቅራቢያ ያሉ ፋርማሲዎችን ይፈልጉ",
    ],
    findPharmaciesFor: "የሚከተለውን መድሃኒት የሚሸጡ ፋርማሲዎችን ይፈልጉ",
    milesAway: "ማይል ርቀት",
    enterLocationToFind: "ፋርማሲዎችን ለማግኘት አካባቢዎን ያስገቡ ወይም አሁን ያሉበትን ቦታ ይጠቀሙ",
    gotIt: "ገባኝ",
    walletConnected: "ዋሌት ተገናኝቷል",
    welcomeGift: "የእንኳን ደህና መጡ ስጦታ",
    welcomeGiftDescription: "አዲስ ተጠቃሚዎች በገበያ ቦታችን ለመጀመር 100 IDA ቶከኖችን ይቀበላሉ!",
    blockchainVerifiedVendor: "በብሎክቼይን የተረጋገጠ ሻጭ",
    expressDelivery: "ፈጣን ማድረሻ (1-2 ሰዓታት)",
    standardDelivery: "መደበኛ ማድረሻ (3-5 ሰዓታት)",
    firstOrderDiscount: "በመጀመሪያ ትዕዛዝዎ ላይ 10% ቅናሽ",
    freeDelivery: "ከ500 ETB በላይ በሆኑ ትዕዛዞች ላይ ነፃ ማድረሻ",
    ethiopianPharmaceuticalAssociation: "የኢትዮጵያ የፋርማሲ ማህበር",
    pharmacyStatistics: "የፋርማሲ ስታቲስቲክስ",
    rating: "ደረጃ",
    deliverySuccess: "የማድረስ ስኬት",
    availableMedicines: "ያሉ መድሃኒቶች",
    scheduleConsultation: "ምክክር ያስይዙ",
    browseMedicines: "መድሃኒቶችን ይመልከቱ",
    viewTransactionHistory: "የግብይት ታሪክዎን ይመልከቱ",
    noTransactions: "ምንም ግብይቶች የሉም",
    comingSoon: "በቅርብ ጊዜ",
    medicineScan: "የመድሃኒት ስካነር",
    scanMedicineDescription: "የመድሃኒት ፓኬጆችን ስካን በማድረግ ስለ ማንኛውም መድሃኒት ዝርዝር መረጃ ወዲያውኑ ያግኙ",
    qrCodeInfo: "QR ኮድ ማከማቻ",
    qrCodeDescription: "የመድሃኒት መረጃዎን በ QR ኮዶች በመጠቀም በደህንነት ያከማቹ እና ያጋሩ",
    firstAidGame: "የመጀመሪያ እርዳታ ጨዋታ",
    profile: "መገለጫ",
    transactions: "ግብይቶች",
  },
}

type LanguageContextType = {
  language: string
  setLanguage: (lang: string) => void
  t: (key: string) => string
}

const LanguageContext = createContext<LanguageContextType>({
  language: "en",
  setLanguage: () => {},
  t: (key) => key,
})

export const useLanguage = () => useContext(LanguageContext)

export function LanguageProvider({ children }: { children: ReactNode }) {
  const [language, setLanguage] = useState<string>("en")
  const [isMounted, setIsMounted] = useState<boolean>(false)

  useEffect(() => {
    setIsMounted(true)
    const savedLanguage = localStorage.getItem("language") || "en"
    setLanguage(savedLanguage)
  }, [])

  const changeLanguage = (lang: string) => {
    if (isMounted) {
      localStorage.setItem("language", lang)
      setLanguage(lang)
    }
  }

  const translate = (key: string): string | string[] => {
    // Check if the key exists in the translations
    if (translations[language] && key in translations[language]) {
      return translations[language][key]
    }

    // Return the key itself if translation not found
    return key
  }

  return (
    <LanguageContext.Provider value={{ language, setLanguage: changeLanguage, t: translate }}>
      {children}
    </LanguageContext.Provider>
  )
}
